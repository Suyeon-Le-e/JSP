/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.54
 * Generated at: 2020-04-24 09:28:13 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.board;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class write_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("/layout/footer.jsp", Long.valueOf(1587611867100L));
    _jspx_dependants.put("/board/write_content.jsp", Long.valueOf(1587620666734L));
    _jspx_dependants.put("/layout/header.jsp", Long.valueOf(1587720214051L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <title>Write</title>\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"/project/css/common.css\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"/project/css/write.css\">\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<!-- header -->\r\n");
      out.write("    <header>\r\n");
      out.write("    \t");
      out.write("\r\n");
      out.write("<a href=\"/project/index.jsp\"> <img src=\"/project/img/logo.png\"\r\n");
      out.write("\tclass=\"logo\" alt=\"\">\r\n");
      out.write("</a>\r\n");
 
String name = (String)session.getAttribute("userName");

      out.write('\r');
      out.write('\n');
if(name == null){
      out.write("\r\n");
      out.write("<nav>\r\n");
      out.write("\t<ul class=\"nav-items\">\r\n");
      out.write("\t\t<li><a href=\"/project/login/login.jsp\">Login</a></li>\r\n");
      out.write("\t\t<li>|</li>\r\n");
      out.write("\t\t<li><a href=\"/project/join/join.jsp\">Join</a></li>\r\n");
      out.write("\t\t<li>|</li>\r\n");
      out.write("\t\t<li><a href=\"/project/index.jsp\">게시판</a></li>\r\n");
      out.write("\t</ul>\r\n");
      out.write("</nav>\r\n");
}else{ 
      out.write("\r\n");
      out.write("<nav>\r\n");
      out.write("\t<ul class=\"nav-items\">\r\n");
      out.write("\t\t<li><a href=\"#\">");
      out.print(name );
      out.write("님 환영합니다</a></li>\r\n");
      out.write("\t\t<li>|</li>\r\n");
      out.write("\t\t<li><a href=\"#\">로그아웃</a></li>\r\n");
      out.write("\t\t<li>|</li>\r\n");
      out.write("\t\t<li><a href=\"/project/index.jsp\">게시판</a></li>\r\n");
      out.write("\t</ul>\r\n");
      out.write("</nav>\r\n");
} 
      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("    </header>\r\n");
      out.write("\r\n");
      out.write("    \r\n");
      out.write("    <div class=\"table\">\r\n");
      out.write("\t\t");
      out.write("\r\n");
      out.write("<table>\r\n");
      out.write("\t<tr>\r\n");
      out.write("\t\t<td colspan=\"2\" class=\"top\">게시판 글쓰기</td>\r\n");
      out.write("\t</tr>\r\n");
      out.write("\t<tr>\r\n");
      out.write("\t\t<td>작성자</td>\r\n");
      out.write("\t\t<td><input type=\"text\" class=\"writer\"></td>\r\n");
      out.write("\t</tr>\r\n");
      out.write("\t<tr>\r\n");
      out.write("\t\t<td>E-mail</td>\r\n");
      out.write("\t\t<td><input type=\"text\" class=\"email\"></td>\r\n");
      out.write("\t</tr>\r\n");
      out.write("\t<tr>\r\n");
      out.write("\t\t<td>홈페이지</td>\r\n");
      out.write("\t\t<td><input type=\"text\" class=\"home\"></td>\r\n");
      out.write("\t</tr>\r\n");
      out.write("\t<tr>\r\n");
      out.write("\t\t<td>제목</td>\r\n");
      out.write("\t\t<td><input type=\"text\" class=\"title\"></td>\r\n");
      out.write("\t</tr>\r\n");
      out.write("\t<tr>\r\n");
      out.write("\t\t<td>내용</td>\r\n");
      out.write("\t\t<td><textarea class=\"contents\" name=\"contents\" id=\"contents\"\r\n");
      out.write("\t\t\t\tcols=\"30\" rows=\"10\"></textarea></td>\r\n");
      out.write("\t</tr>\r\n");
      out.write("\r\n");
      out.write("\t<tr>\r\n");
      out.write("\t\t<td>비밀번호</td>\r\n");
      out.write("\t\t<td><input type=\"password\" class=\"pw\"></td>\r\n");
      out.write("\t</tr>\r\n");
      out.write("\t<tr>\r\n");
      out.write("\t\t<td colspan=\"2\" class=\"top\"><input type=\"button\" id=\"signupBtn\"\r\n");
      out.write("\t\t\tvalue=\"등록\"> <a href=\"javascript:history.back();\"> <input\r\n");
      out.write("\t\t\t\ttype=\"button\" value=\"취소\">\r\n");
      out.write("\t\t</a></td>\r\n");
      out.write("\t</tr>\r\n");
      out.write("\r\n");
      out.write("</table>");
      out.write("\r\n");
      out.write("    </div>\r\n");
      out.write("    <script src=\"/project/js/board.js\"></script>\r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("\t<!-- footer -->\r\n");
      out.write("\t<footer>\r\n");
      out.write("\t\t");
      out.write("\r\n");
      out.write("\t<div>\r\n");
      out.write("        <p>이용약관  |  개인정보취급방침 </p> \r\n");
      out.write("        <address>서울특별시 구로구 디지털로 306 (구로동, 대륭포스트타워 2차 212호,218호,219호)  |  t. 02-2082-1688  |  F. 031-000-0000</address>\r\n");
      out.write("        <p>Copyright ⓒ THEJOEUN ACADEMY Corp.. All Rights Reserved.</p>\r\n");
      out.write("\t</div>");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    </footer>\r\n");
      out.write("   \r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
